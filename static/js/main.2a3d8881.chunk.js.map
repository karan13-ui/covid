{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","active","value","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","Copyright","align","this","React","Component","App","state","setState","image","src","alt","CountryPicker","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a3d8881.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3qsND\",\"card\":\"Cards_card__23wmm\",\"infected\":\"Cards_infected__7Pz7H\",\"active\":\"Cards_active__2LBpZ\",\"recovered\":\"Cards_recovered__roaf1\",\"deaths\":\"Cards_deaths__iRwWi\"};","import React from 'react'\r\nimport{Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards=({data:{confirmed,recovered,deaths,lastUpdate}})=>{\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    var active=confirmed.value-(recovered.value+deaths.value);\r\n    return(\r\n       <div className={styles.container}>\r\n           <Grid container spacing={2} justify=\"center\">\r\n           <Grid item component={Card}  xs={12} md={2}  className={cx(styles.card,styles.infected)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number Of Total Cases Of Covid-19:</Typography>\r\n            </CardContent>\r\n           </Grid>\r\n\r\n           <Grid item component={Card}  xs={12} md={2}  className={cx(styles.card,styles.active)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Active</Typography>\r\n                <Typography variant=\"h5\"><CountUp start={0} end={active} duration={2.5} separator=\",\"/>\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number Of Active Cases Of Covid-19:</Typography>\r\n            </CardContent>\r\n           </Grid>\r\n\r\n           <Grid item component={Card} xs={12} md={2}  className={cx(styles.card,styles.recovered)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Recoveries</Typography>\r\n                <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/> \r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number Of Recoveries from Covid-19</Typography>\r\n            </CardContent>\r\n           </Grid>\r\n\r\n           <Grid item component={Card} xs={12} md={2}  className={cx(styles.card,styles.deaths)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                 </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number Of Deaths Due To Covid-19</Typography>\r\n            </CardContent>\r\n           </Grid>\r\n           \r\n           </Grid>\r\n\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n        \r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected','Active', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(0,100,100,0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value,confirmed.value-(recovered.value+deaths.value), recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current stats in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component{\r\n   Copyright=()=>{\r\n       return(\r\n        <h2 variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Designed by '}\r\n        {'Karan Rustagi.'}\r\n        {'.'}\r\n    </h2>\r\n       )\r\n   }\r\n   render(){\r\n       return(\r\n           <footer>\r\n               <div className=\"footer 1-box is-center\">\r\n                   {this.Copyright()}\r\n               </div>\r\n           </footer>\r\n       )\r\n   }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart,Footer } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\nimport image from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n    \r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n   \r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} /> \r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1EPza\",\"image\":\"App_image__3pzEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3K8R-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__Mf4eE\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}